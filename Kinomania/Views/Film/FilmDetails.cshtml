@model Kinomania.Models.Film

@{
    ViewData["Title"] = "FilmDetails";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>@Model.Name</h1>

<div>
    <hr />
    <img src="~/images/@Model.PosterPath" alt="@Model.Name" width="240" height="380">
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            <img src="~/images/Other/Rating.png" alt="Rating" width="20" height="20">
            @Html.DisplayNameFor(model => model.Rating)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Rating)
        </dd>
        @if ((await AuthorizationService.AuthorizeAsync(User, "RequireUserRole")).Succeeded)
        {
            <dt class="col-sm-2">
                <img src="~/images/Other/Rating.png" alt="Rating" width="20" height="20">
                Your @Html.DisplayNameFor(model => model.Rating)
            </dt>
            <dd class="col-sm-10">
                <form asp-action="AddRating" style="display:flex; flex-direction:row">
                    @if (ViewBag.CurrentUserRating != null)
                    {
                        @ViewBag.CurrentUserRating
                        <h7>&ensp;</h7>
                    }
                    <input class="form-control" type="hidden" value="@Model.Id" name="FilmId" />
                    <input class="form-control" type="number" name="Rate" min="1" max="10" style="width: 60px" />
                    <h7>&ensp;</h7>
                    <input class="btn btn-primary" value="Enter" type="submit" />
                </form>
            </dd>
        }
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ReleaseDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ReleaseDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Producer)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Producer)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Budget)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Budget) &#36
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Actors)
        </dt>
        <dd class="col-sm-10">
            @foreach (Kinomania.Models.ActorFilm item in Model.ActorsFilms)
            {
                <a asp-action="ActorDetails" asp-route-id="@item.ActorId">@item.Actor.FirstName @item.Actor.LastName</a>
                <h7>|</h7>
            }
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Genres)
        </dt>
        <dd class="col-sm-10">
            @foreach (Kinomania.Models.FilmGenre item in Model.FilmsGenres)
            {<h7>@item.Genre.Name, </h7>}
        </dd>
    </dl>
</div>
<form asp-action="AddReview">
    <div class="form-group">
        <input class="form-control" type="text" name="Body" placeholder="Write review.."/>
        <input class="form-control" type="hidden" value="@Model.Id" name="FilmId" />
        <input class="btn btn-primary" value="Enter" type="submit" />
    </div>
</form>
<div>
    @if ((await AuthorizationService.AuthorizeAsync(User, "RequireAdministratorRole")).Succeeded)
    {
        <a asp-action="EditFilm" asp-route-id="@Model.Id">Edit </a>
        <h7> | </h7>
        <a asp-action="DeleteFilm" asp-route-id="@Model.Id">Delete</a>
    }
    | <a asp-action="Index">Back to List</a>
</div>
<div>
    @await Html.PartialAsync("FilmDetailsReview", Model.Reviews)
</div>
